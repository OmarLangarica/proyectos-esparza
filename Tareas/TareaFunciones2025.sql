--1.- FUNCION ESCALAR QUE RECIBA DOS CLAVES DE CLIENTES,UN AÑO Y UN MES,
--Y REGRESE EL NOMBRE DEL CLIENTE QUE MAS HA VENDIDO PIEZAS DE LOS DOS 
--EN ESE AÑO-MES Y EL TOTAL DE PIEZAS VENDIDAS. POR EJEMPLO, DEBE REGRESAR: EL CLIENTE JUAN PEREZ VENDIO 450 PIEZAS.
ALTER FUNCTION DBO.FN_1 (@CLIID1 NCHAR(5), @CLIID2 NCHAR(5), @AÑO INT, @MES INT) 
RETURNS NVARCHAR(100) AS
BEGIN
	DECLARE @RESULTADO NVARCHAR(100), @CLIENTENOMBRE1 NVARCHAR(50), @CANTIDAD1 INT,
	@CLIENTENOMBRE2 NVARCHAR(50), @CANTIDAD2 INT

	SELECT @CLIENTENOMBRE1 = C.ContactName, @CANTIDAD1 = SUM(Od.Quantity)
	FROM Customers C
	INNER JOIN Orders O ON O.CustomerID = C.CustomerID
	INNER JOIN [Order Details] OD ON OD.OrderID = O.OrderID
	WHERE C.CustomerID = @CLIID1 AND YEAR(O.OrderDate) = @AÑO AND DATEPART(mm,O.OrderDate)=@MES
	GROUP BY C.ContactName

	SELECT @CLIENTENOMBRE2 = C.ContactName, @CANTIDAD2 = SUM(OD.Quantity)
	FROM Customers C
	INNER JOIN Orders O ON O.CustomerID = C.CustomerID
	INNER JOIN [Order Details] OD ON OD.OrderID = O.OrderID
	WHERE C.CustomerID = @CLIID2 AND YEAR(O.OrderDate) = @AÑO AND DATEPART(mm,O.OrderDate)=@MES
	GROUP BY C.ContactName

	IF @CANTIDAD1 > @CANTIDAD2
		SELECT @RESULTADO = 'EL CLIENTE '+@CLIENTENOMBRE1+ ' VENDIO '+CAST(@CANTIDAD1 AS NVARCHAR)+ ' PIEZAS'
	ELSE
		SELECT @RESULTADO = 'EL CLIENTE '+@CLIENTENOMBRE2+ ' VENDIO '+CAST(@CANTIDAD2 AS NVARCHAR)+ ' PIEZAS'

	RETURN @RESULTADO
END
GO
--EJECUCION
DECLARE @R NVARCHAR(100)
SELECT @R = DBO.FN_1('ISLAT','TORTU',1996,10)
SELECT @R

--2.- FUNCION ESCALAR QUE RECIBA LA CLAVE DEL TERRITORIO Y REGRESE UNA CADENA CON 
--LOS NOMBRE DE LOS EMPLEADOS QUE SURTEN DICHO TERRITORIO.
ALTER FUNCTION DBO.FN_2 (@TERRITORYID INT) 
RETURNS NVARCHAR(MAX) AS
BEGIN
	DECLARE @CADENA NVARCHAR(MAX)
	SELECT @CADENA = STRING_AGG(E.FirstName + ' ' + E.LastName,', ')
	FROM EmployeeTerritories ET
	INNER JOIN Employees E ON E.EmployeeID = ET.EmployeeID
	WHERE ET.TerritoryID = @TERRITORYID

	RETURN @CADENA
END
GO
--EJECUCION
DECLARE @R NVARCHAR(MAX)
SELECT @R= DBO.FN_2(01730)
SELECT @R

--3.- FUNCION DE TABLA EN LINEA QUE RECIBA LA CLAVE DE LA PROVEEDORES Y 
--REGRESE UNA TABLA CON LOS NOMBRES DE LOS PRODUCTOS QUE SURTE, EL IMPORTE TOTAL DE VENTAS, EL TOTAL DE ORDENES DONDE SE VENDIÓ Y TIPO PRODUCTO: 
--•	BUENO: SI VENDIO MAS DE 500 PRODUCTOS, 
--•	MALO: SI VENDIO MENOS DE 500 PRODUCTOS.
CREATE FUNCTION DBO.FN_3 (@SUPPLIERID INT) 
RETURNS TABLE
AS
RETURN(
SELECT PRODUCTOS = P.ProductName, 'IMPORTE DE VENTA' = SUM(OD.Quantity * OD.UnitPrice), 
'TOTAL DE ORDENES' = COUNT(OD.OrderID),
TIPO = CASE WHEN SUM(OD.Quantity) > 500 THEN 'BUENO' ELSE 'MALO' END
FROM [Order Details] OD
INNER JOIN Products P ON P.ProductID = OD.ProductID
INNER JOIN Suppliers S ON S.SupplierID = P.SupplierID
GROUP BY P.ProductName
)
GO
--EJECUCION
SELECT * FROM DBO.FN_3(1)

--4.- FUNCION DE TABLA EN LINEA QUE RECIBA LA CLAVE DEL EMPLEADO, AÑO Y MES,
--REGRESE EN UNA CONSULTA EL NOMBRE DEL PRODUCTO Y TOTAL DE PRODUCTOS VENDIDOS POR ESE EMPLEADO Y ESE AÑO-MES.
ALTER FUNCTION DBO.FN_4 (@EMPID INT, @AÑO INT, @MES INT)
RETURNS TABLE AS
RETURN(
SELECT 'NOMBRE DEL PRODUCTO' = P.ProductName, 'TOTAL' = SUM(OD.Quantity)
FROM Products P
INNER JOIN [Order Details] OD ON OD.ProductID = P.ProductID
INNER JOIN Orders O ON O.OrderID = OD.OrderID
WHERE O.EmployeeID = @EMPID AND YEAR(O.OrderDate) = @AÑO AND DATEPART(mm,OrderDate) = @MES 
GROUP BY P.ProductName
)
GO
--EJECUCION
SELECT * FROM DBO.FN_4(1,1996,1)
SELECT * FROM DBO.FN_4(1,1997,1)
SELECT * FROM DBO.FN_4(1,1998,1)

--5.- UTILIZANDO LA FUNCION ANTERIOR MOSTRAR UNA CONSULTA SIGUIENTE:
SELECT P.ProductName, 'TOTAL PIEZAS 96-ENE'=ISNULL(A.Total,0), 'TOTAL PIEZAS 97-ENE'=ISNULL(B.Total,0), 'TOTAL PIEZAS 98-ENE'= ISNULL (C.Total,0) 
FROM PRODUCTS P
LEFT OUTER JOIN DBO.FN_4(1,1996,1) A ON P.ProductName = A.[NOMBRE DEL PRODUCTO] 
LEFT OUTER JOIN DBO.FN_4(1,1997,1) B ON P.ProductName = B.[NOMBRE DEL PRODUCTO] 
LEFT OUTER JOIN DBO.FN_4(1,1998,1) C ON P.ProductName = C.[NOMBRE DEL PRODUCTO]

--6.
ALTER FUNCTION DBO.FN_6()
RETURNS @TABLA TABLE(CATEGORIA NVARCHAR(20), PRODUCTOSMENOS NVARCHAR(MAX), PRODUCTOSMAS NVARCHAR(MAX)) AS
BEGIN
DECLARE @CATEGORYID INT, @CATEGORIANOMBRE NVARCHAR(20), @CANTPIEZAS INT, @PRODUCTID INT, @PRODUCTOSMAS NVARCHAR(MAX),
		@PRODUCTOSMENOS NVARCHAR(MAX), @PRODUCTONOMBRE NVARCHAR(20)

SELECT @CATEGORYID = MIN(CATEGORYID) FROM CATEGORIES 
WHILE @CATEGORYID IS NOT NULL
BEGIN
	SELECT @CATEGORIANOMBRE = CATEGORYNAME FROM CATEGORIES 
	WHERE CATEGORYID = @CATEGORYID

	SELECT @PRODUCTOSMAS = '', @PRODUCTOSMENOS = ''

	SELECT @PRODUCTID = MIN(PRODUCTID) FROM PRODUCTS 
	WHERE CATEGORYID = @CATEGORYID
	
	WHILE @PRODUCTID IS NOT NULL
	BEGIN
		SELECT @CANTPIEZAS= ISNULL(SUM(OD.QUANTITY),0), @PRODUCTONOMBRE = P.PRODUCTNAME
		FROM [Order Details] OD
		INNER JOIN PRODUCTS P ON P.ProductID = OD.ProductID
		WHERE P.PRODUCTID = @PRODUCTID
		GROUP BY P.ProductName

		IF @CANTPIEZAS BETWEEN 0 AND 100
			SELECT @PRODUCTOSMENOS = @PRODUCTOSMENOS +''+ @PRODUCTONOMBRE + ', '

		IF @CANTPIEZAS > 100
			SELECT @PRODUCTOSMAS = @PRODUCTOSMAS +''+ @PRODUCTONOMBRE + ', '

		SELECT @PRODUCTID = MIN(PRODUCTID) FROM PRODUCTS 
		WHERE CATEGORYID = @CATEGORYID AND PRODUCTID > @PRODUCTID

	END

	IF LEN(@PRODUCTOSMENOS) > 0
		SELECT @PRODUCTOSMENOS = SUBSTRING(@PRODUCTOSMENOS, 1, LEN(@PRODUCTOSMENOS) - 1)

	IF LEN(@PRODUCTOSMAS) > 0
	   SELECT @PRODUCTOSMAS = SUBSTRING(@PRODUCTOSMAS, 1, LEN(@PRODUCTOSMAS) - 1)  


	INSERT @TABLA VALUES(@CATEGORIANOMBRE, @PRODUCTOSMENOS, @PRODUCTOSMAS)
	
	SELECT @CATEGORYID = MIN(CATEGORYID) FROM CATEGORIES WHERE CategoryID > @CATEGORYID
END
RETURN
END
GO
--EJECUCION
SELECT CATEGORIA, 
'PRODUCTOS DE 0 A 100 TOTAL DE PIEZAS VENDIDAS'=PRODUCTOSMENOS,
'PRODUCTOS DE MAS DE 100 PIEZAS VENDIDAS'=PRODUCTOSMAS FROM DBO.FN_6()

--7
ALTER FUNCTION DBO.FN_7 (@AÑO INT)
RETURNS @TABLA TABLE(DIASEMANA NVARCHAR(20),FOLIOSMENOS NVARCHAR(MAX), FOLIOSMAS NVARCHAR(MAX)) AS
BEGIN
DECLARE @DIAS TABLE(CLAVE INT,NOMBREDIA VARCHAR(30))
INSERT INTO @DIAS VALUES 
(1, 'DOMINGO'),  
(2, 'LUNES'), 
(3, 'MARTES'), 
(4, 'MIERCOLES'),
(5, 'JUEVES'), 
(6, 'VIERNES'), 
(7, 'SABADO')

DECLARE @DIAID INT, @DIANOMBRE NVARCHAR(20), @IMPORTE NUMERIC(10,2),@FOLIOSMENOS NVARCHAR(MAX), @FOLIOSMAS NVARCHAR(MAX),
		@ORDERID INT
SELECT @DIAID = MIN(CLAVE) FROM @DIAS
WHILE @DIAID IS NOT NULL
BEGIN
	SELECT @DIANOMBRE = NOMBREDIA FROM @DIAS WHERE CLAVE = @DIAID 
	
	SELECT @FOLIOSMAS = '', @FOLIOSMENOS = ''

	SELECT @ORDERID = MIN(ORDERID) FROM ORDERS WHERE DATEPART(DW,ORDERDATE) = @DIAID AND YEAR(ORDERDATE)= @AÑO
	WHILE @ORDERID IS NOT NULL
	BEGIN
		SELECT @IMPORTE = SUM(QUANTITY*UNITPRICE)
		FROM [Order Details] 
		WHERE ORDERID = @ORDERID

		IF @IMPORTE BETWEEN 0 AND 2000
			SELECT @FOLIOSMENOS = @FOLIOSMENOS + CAST(@ORDERID AS NVARCHAR) + ', '
		IF @IMPORTE > 2000
			SELECT @FOLIOSMAS = @FOLIOSMAS + CAST(@ORDERID AS NVARCHAR) + ', '

		SELECT @ORDERID = MIN(ORDERID) FROM ORDERS WHERE DATEPART(DW,ORDERDATE) = @DIAID AND ORDERID > @ORDERID AND YEAR(ORDERDATE)=@AÑO
	END
	
	IF LEN(@FOLIOSMENOS) > 0
		SELECT @FOLIOSMENOS = SUBSTRING(@FOLIOSMENOS, 1, LEN(@FOLIOSMENOS) - 1)

	IF LEN(@FOLIOSMAS) > 0
	   SELECT @FOLIOSMAS = SUBSTRING(@FOLIOSMAS, 1, LEN(@FOLIOSMAS) - 1)

	INSERT @TABLA VALUES(@DIANOMBRE, @FOLIOSMENOS, @FOLIOSMAS)
	SELECT @DIAID = MIN(CLAVE) FROM @DIAS WHERE CLAVE > @DIAID
END
RETURN
END
GO
--EJECUCION
SELECT DIASEMANA, 'FOLIOS CON IMPORTE 0 A 2000'=FOLIOSMENOS,'FOLIOS CON IMPORTE MAYOR A 2000'= FOLIOSMAS FROM DBO.FN_7(1996)

--8.- FUNCION DE TABLA DE MULTISENTENCIA QUE RECIBA LA CLAVE DE UN EMPLEADO 
--Y REGRESE UNA TABLA LOS DIAS DE LA SEMANA Y LOS CUMPLEAÑOS QUE SE HA FESTEJADO ESE DIA DE LA SEMANA
ALTER FUNCTION DBO.FN_8 (@EMPID INT)
RETURNS @DIASCUMPLEAÑOS TABLE (RANGO NVARCHAR(50), FESTEJOS NVARCHAR(1000)) AS
BEGIN
	 DECLARE @AÑOS DATETIME, @DIASEMANA INT, @RANGONOMBRE VARCHAR(30)
	 SELECT @AÑOS = BirthDate FROM Employees WHERE EmployeeID = @EMPID

	 DECLARE @RANGOS TABLE(CLAVE INT,RANGONOMBRE VARCHAR(30))
	 INSERT INTO @RANGOS VALUES 
	 (1, 'DOMINGO-LUNES'),  
     (2, 'DOMINGO-LUNES'), 
     (3, 'MARTES-MIERCOLES'), 
     (4, 'MARTES-MIERCOLES'),
     (5, 'JUEVES-VIERNES-SABADO'), 
     (6, 'JUEVES-VIERNES-SABADO'), 
     (7, 'JUEVES-VIERNES-SABADO')

	 INSERT INTO @DIASCUMPLEAÑOS(RANGO)
	 SELECT DISTINCT RANGONOMBRE
	 FROM @RANGOS

     WHILE @AÑOS <= GETDATE()
     BEGIN
		SET @DIASEMANA = DATEPART(DW, @AÑOS)

        SELECT @RANGONOMBRE = RANGONOMBRE FROM @RANGOS WHERE CLAVE = @DIASEMANA

        UPDATE @DIASCUMPLEAÑOS
        SET FESTEJOS = ISNULL(FESTEJOS + ', ','') + CAST(YEAR(@AÑOS) AS NVARCHAR(MAX))
        WHERE RANGO = @RANGONOMBRE

        SET @AÑOS = DATEADD(YEAR, 1, @AÑOS)
     END

	 RETURN
END
GO
--EJECUCION
SELECT * FROM DBO.FN_8(6) 

--9.- FUNCION DE TABLA DE MULTISENTENCIA QUE RECIBA UN AÑO, QUE REGRESE UNA TABLA CON
--NOMBRE DEL PRODUCTO QUE SE VENDIERON ESE AÑO Y EN OTRA COLUMNA, TODOS LOS FOLIOS DE 
--ORDENES EN QUE SE HAN VENDIDO LOS FINES DE SEMANA Y EN OTRA LOS FOLIOS ENTRE SEMANA.
ALTER FUNCTION DBO.FN_9(@AÑO INT)
RETURNS @PRODUCTOS TABLE(NOMBREPRODUCTO NVARCHAR(50),FOLIOSFIN NVARCHAR(MAX),FOLIOSENTRE NVARCHAR(MAX)) AS
BEGIN
    DECLARE @TEMP TABLE (ProductID INT,ProductName NVARCHAR(50),OrderID INT,DiaSemana INT)
	DECLARE @FOLIOSFIN NVARCHAR(MAX), @FOLIOSENTRE NVARCHAR(MAX), @PRODUCTID INT, @PRODUCTONOMBRE NVARCHAR(50)

    INSERT INTO @TEMP (ProductID, ProductName, OrderID, DiaSemana)
    SELECT p.ProductID,p.ProductName,o.OrderID,DATEPART(WEEKDAY, o.OrderDate)
    FROM Orders o
    INNER JOIN [Order Details] od ON o.OrderID = od.OrderID
    INNER JOIN Products p ON od.ProductID = p.ProductID
    WHERE YEAR(o.OrderDate) = @AÑO

	SELECT @PRODUCTID = MIN(ProductID) FROM @TEMP
	WHILE @PRODUCTID IS NOT NULL
	BEGIN
		SELECT @PRODUCTONOMBRE = ProductName FROM @TEMP WHERE ProductID = @PRODUCTID

		SELECT @FOLIOSFIN = ISNULL(STRING_AGG(CAST(ORDERID AS NVARCHAR),', '),'')
		FROM @TEMP 
		WHERE DiaSemana IN (7,1) AND ProductID = @PRODUCTID

		SELECT @FOLIOSENTRE = STRING_AGG(CAST(ORDERID AS NVARCHAR),', ')
		FROM @TEMP 
		WHERE DiaSemana BETWEEN 2 AND 6 AND ProductID = @PRODUCTID

		INSERT @PRODUCTOS VALUES (@PRODUCTONOMBRE, @FOLIOSFIN, @FOLIOSENTRE)
		SELECT @PRODUCTID = MIN(PRODUCTID) FROM @TEMP WHERE ProductID > @PRODUCTID
	END

	RETURN
END
GO
--EJECUCION
SELECT * FROM DBO.FN_9 (1996)
