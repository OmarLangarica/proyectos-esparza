--1.- PROCEDIMIENTO ALMACENADO QUE RECIBA LA CLAVE DE UN EMPLEADO, 
--REGRESE EN SOLO PARAMETRO DE SALIDA LOS NOMBRES DE LOS CLIENTES QUE HA ATENDIDO.
--NOTA: QUE NO SE REPITAN LOS NOMBRES DE LOS CLIENTES.
ALTER PROC SP_1 @EMPID INT,@CLIENTES NVARCHAR(MAX) OUTPUT AS
BEGIN
	CREATE TABLE #TABLA(CLIENTENOMBRE NVARCHAR(100))
	INSERT INTO #TABLA
	SELECT DISTINCT ContactName
	FROM Orders O
	INNER JOIN Customers C ON C.CustomerID = O.CustomerID 
	WHERE EmployeeID = @EMPID 

	SELECT @CLIENTES = STRING_AGG(CLIENTENOMBRE, ', ')
	FROM #TABLA 
END
GO
DECLARE @RESULTADO NVARCHAR(MAX)
EXEC SP_1 2, @RESULTADO OUTPUT
SELECT CLIENTES = @RESULTADO 

--2.-PROCEDIMIENTO ALMACENADO QUE REGRESE LA SIGUIENTE TABLA: NOMBRE DE EMPLEADO Y NOMBRE DE LOS CLIENTES QUE HA ATENDIDO.
ALTER PROC SP_2 AS
BEGIN
	DECLARE @EMPID INT, @EMPNOMBRE NVARCHAR(100), @CLIENTES NVARCHAR(MAX)
	CREATE TABLE #TABLA(EMPNOMBRE NVARCHAR(100),CLINOMBRE NVARCHAR(MAX))
	CREATE TABLE #UNICOS(CLIENTENOMBRE NVARCHAR(100))

	SELECT @EMPID = MIN(EmployeeID) FROM Employees
	WHILE @EMPID IS NOT NULL
	BEGIN
		DELETE FROM #UNICOS
		SELECT @EMPNOMBRE = Firstname + ' ' +LastName FROM Employees WHERE EmployeeID = @EMPID 

		INSERT INTO #UNICOS (CLIENTENOMBRE)
		SELECT DISTINCT ContactName 
		FROM Orders O
		INNER JOIN Customers C ON C.CustomerID = O.CustomerID 
		WHERE EmployeeID = @EMPID 

		SELECT @CLIENTES = STRING_AGG(CAST(CLIENTENOMBRE AS NVARCHAR),', ')
		FROM #UNICOS

		INSERT INTO #TABLA VALUES (@EMPNOMBRE,@CLIENTES)
		SELECT @EMPID = MIN(EmployeeID) FROM Employees WHERE EmployeeID > @EMPID
	END
	SELECT EMPNOMBRE, CLINOMBRE FROM #TABLA
END
GO
EXEC SP_2

--3.- CREAR UN SP QUE RECIBA UN AÑO Y LLENE LA SIGUIENTE TABLA LLAMADA SEMANA (CLAVE INT, FECHA DATETIME, SEMANA INT), 
--SE DEBE LLENAR DESDE EL PRIMERO DE ENERO HASTA EL 31 DE DICIEMBRE. 
CREATE PROC SP_3 @AÑO INT AS
CREATE TABLE #SEMANA(CLAVE INT IDENTITY (1,1), FECHA DATETIME, SEMANA INT)
DECLARE @FECHA DATETIME = CAST(CAST(@AÑO AS VARCHAR) + '-01-01' AS DATETIME)
DECLARE @FIN DATETIME = CAST(CAST(@AÑO AS VARCHAR) + '-12-31' AS DATETIME)
WHILE @FECHA <= @FIN 
BEGIN
	INSERT INTO #SEMANA (FECHA, SEMANA)
    VALUES (@FECHA, DATEPART(WK, @FECHA))

	SELECT @FECHA = DATEADD(DD,1,@FECHA)
END
SELECT * FROM #SEMANA
GO
EXEC SP_3 2010

--4.- SP QUE RECIBA EL NOMBRE DE UNA TABLA Y QUE IMPRIMA EL CODIGO PARA CREAR ESA TABLA PLANA
ALTER PROC SP_CREARTABLA @TABLA NVARCHAR(50) AS  
DECLARE @CODIGO NVARCHAR(MAX), @COLUMNAS NVARCHAR(MAX)
SELECT @CODIGO = 'CREATE TABLE ' + @TABLA + ' ('
SELECT @COLUMNAS = ''

SELECT @COLUMNAS = @COLUMNAS +  COLUMN_NAME + ' ' +  DATA_TYPE +
ISNULL(' (' + CAST(CHARACTER_MAXIMUM_LENGTH AS NVARCHAR) + ')',  '') + ', '  
FROM INFORMATION_SCHEMA.COLUMNS  
WHERE TABLE_NAME = @TABLA  

SELECT @COLUMNAS = SUBSTRING(@COLUMNAS,1, LEN(@COLUMNAS) - 1)  

SELECT @CODIGO = @CODIGO + @COLUMNAS + ')'  

SELECT @CODIGO 
GO  
EXEC SP_CREARTABLA 'Products'

--5.- AGREGAR A LA TABLA CUSTOMERS EL CAMPO IMPORTETOTAL, EL CUAL REPRESENTARÁ EL IMPORTE TOTAL
--QUE  HA COMPRADO DICHO CLIENTE. CREAR UN PROCEDIMIENTO ALMACENADO QUE LLENE DICHO CAMPO.
ALTER TABLE CUSTOMERS ADD ImporteTotal NUMERIC(10,2)
ALTER PROC SP_5 AS
DECLARE @IMPORTE NUMERIC(10,2), @CLIID NVARCHAR(5)
SELECT @CLIID = MIN(CustomerID) FROM Customers
WHILE @CLIID IS NOT NULL
BEGIN
	SELECT @IMPORTE = ISNULL(SUM(OD.QUANTITY * OD.UNITPRICE),0.00)
	FROM  [Order Details] OD
	INNER JOIN Orders O ON O.OrderID = OD.OrderID
	WHERE O.CustomerID = @CLIID

	UPDATE Customers 
	SET ImporteTotal = @IMPORTE
    WHERE CustomerID = @CLIID

	SELECT @CLIID = MIN(CustomerID) FROM Customers WHERE CustomerID > @CLIID
END
SELECT CustomerID,CompanyName, ImporteTotal FROM Customers
GO
EXEC SP_5

--6.- PROCEDIMIENTO ALMACENADO QUE RECIBA COMO PARAMETRO UN AÑO Y REGRESE DOS PARAMETROS: 
--•	UN PARAMETRO CON EL NOMBRE DE TODOS LOS CLIENTES QUE COMPRARON ESE AÑO
--•	Y OTRO PARAMETRO CON LA LISTA DE LAS ORDENES REALIZADAS ESE AÑO.
ALTER PROC sp_6 @AÑO INT, @Clientes NVARCHAR(MAX) OUTPUT, @Ordenes NVARCHAR(MAX) OUTPUT AS 
BEGIN 
	CREATE TABLE #TABLA (CLIENTENOMBRE NVARCHAR(MAX))

	INSERT INTO #TABLA(CLIENTENOMBRE)
	SELECT DISTINCT ContactName 
	FROM Orders O
    INNER JOIN Customers C ON C.CustomerID = O.CustomerID 
    WHERE YEAR(O.OrderDate) = @AÑO 

	SELECT @CLIENTES = STRING_AGG(CLIENTENOMBRE,', ')
	FROM #TABLA 

	SELECT @ORDENES = STRING_AGG(CAST(OrderID AS NVARCHAR),' ')
	FROM Orders O
	WHERE YEAR(O.OrderDate) = @AÑO
END
GO 
DECLARE @A NVARCHAR(MAX), @B NVARCHAR(MAX)
EXEC sp_6 1996, @A OUTPUT, @B OUTPUT
SELECT Clientes = @A, Ordenes = @B

--7.- PROCEDIMIENTO ALMACENADO QUE REGRESE UNA TABLA CON EL AÑO Y 
--LOS NOMBRES DE LOS CLIENTES QUE SE COMPRARON ESE AÑO. NO SE DEBEN REPETIR LOS NOMBRES.
ALTER PROC SP_7 AS
DECLARE @CLIENTES NVARCHAR(MAX),@AÑOMIN INT, @AÑOMAX INT
CREATE TABLE #TABLA (AÑO INT, CLIENTES NVARCHAR(MAX))
CREATE TABLE #UNICOS (CLIENTES NVARCHAR(100))

SELECT @AÑOMIN = MIN(YEAR(OrderDate)) FROM Orders 
SELECT @AÑOMAX = MAX(YEAR(OrderDate)) FROM Orders
WHILE @AÑOMIN <= @AÑOMAX 
BEGIN
	DELETE FROM #UNICOS 
	INSERT INTO #UNICOS (CLIENTES)
	SELECT DISTINCT ContactName 
	FROM Orders O
    INNER JOIN Customers C ON C.CustomerID = O.CustomerID 
    WHERE YEAR(O.OrderDate) = @AÑOMIN 

	SELECT @CLIENTES = STRING_AGG(CLIENTES, ', ')
	FROM #UNICOS 

	INSERT INTO #TABLA VALUES (@AÑOMIN, @CLIENTES)
	SELECT @AÑOMIN = @AÑOMIN +1 

END
SELECT * FROM #TABLA 
GO
EXEC SP_7

--8.- SP QUE RECIBA UN AÑO COMO PARAMETRO DE ENTRADA, QUE REGRESE UNA TABLA CON DOS COLUMNAS:
--DIA, FOLIOS QUE SE VENDIERON ESE DIA. NOTA: MOSTRAR TODOS LOS 365 DIAS DEL AÑO.
ALTER PROC SP_8 @AÑO INT AS
BEGIN
    DECLARE @FECHA DATE, @FOLIOS NVARCHAR(MAX)
    CREATE TABLE #TABLA (DIA DATE, FOLIOS NVARCHAR(MAX))

    SELECT @FECHA = CAST(@AÑO AS NVARCHAR) + '-01-01'
    WHILE @FECHA <= CAST(@AÑO AS NVARCHAR) + '-12-31'
    BEGIN 
        SELECT @FOLIOS = STRING_AGG(CAST(ORDERID AS NVARCHAR), ', ')
        FROM Orders 
        WHERE OrderDate = @FECHA

        INSERT INTO #TABLA VALUES (@FECHA, @FOLIOS)

        SELECT @FECHA = DATEADD(DAY, 1, @FECHA)
    END
    SELECT * FROM #TABLA
END
GO
EXEC SP_8 1997

--9.- SP QUE REALICE UN PROCESO DONDE REGRESE LA SIGUIENTE TABLA:
--"NOMBRE DE JEFES" SERÁ LA CADENA CON TODOS LOS NOMBRE DE LOS JEFES QUE TIENE EL EMPLEADO. “Jefe Superior” 
--ES EL JEFE QUE SE ENCUENTRA EN LA RAIZ DEL ARBOL DE EMPLEADOS.
ALTER PROC SP_9 AS
CREATE TABLE #TABLA (EMPLEADO NVARCHAR(100),JEFES NVARCHAR(MAX), JEFESUPERIOR NVARCHAR(100))
DECLARE @EMPID INT, @JEFEID INT, @EMPLEADONOMBRE NVARCHAR(100), @JEFES NVARCHAR(MAX), @JEFESUPERIOR NVARCHAR(100), @AUX INT 
SELECT @EMPID = MIN(Employeeid) FROM Employees 
WHILE @EMPID IS NOT NULL
BEGIN
	SELECT @JEFES = '';
    SELECT @JEFESUPERIOR = ''
	SELECT @EMPLEADONOMBRE = FirstName + ' ' + LastName FROM Employees WHERE EmployeeID = @EMPID 

	SELECT @JEFEID = ReportsTo FROM Employees WHERE EmployeeID = @EMPID 
	WHILE @JEFEID IS NOT NULL 
	BEGIN
		SELECT @JEFES = ISNULL(@JEFES, '') + FirstName + ' ' + LastName + ', ' FROM Employees WHERE EmployeeID = @JEFEID
		SELECT @AUX = @JEFEID 
		SELECT @JEFEID = REPORTSTO FROM EMPLOYEES WHERE EMPLOYEEID = @JEFEID
	END
	SELECT @JEFESUPERIOR = FirstName + ' ' + LastName FROM EMPLOYEES WHERE EmployeeID = @aux

	IF LEN(@JEFES) > 1  
	BEGIN
		SELECT @JEFES = LEFT(@JEFES, LEN(@JEFES) - 1)
	END
	INSERT INTO #TABLA VALUES (@EMPLEADONOMBRE,@JEFES, @JEFESUPERIOR)
	SELECT @EMPID = MIN(Employeeid) FROM Employees WHERE EmployeeID > @EMPID
END
SELECT * FROM #TABLA
GO
EXEC SP_9

--10.- PROCEDIMIENTO ALMACENADO QUE RECIBA LA CLAVE DEL EMPLEADO Y REGRESE DOS PARAMETRO DE SALIDA: 
--•	EL LISTADO DE LOS AÑOS DE LOS CUMPLEAÑOS QUE HAN CAIDO EN FIN DE SEMANA.
--•	EL LISTADO DE LOS AÑOS DE LOS CUMPLEAÑOS QUE HAN CAIDO EN ENTRE DE SEMANA.
ALTER PROC SP_10 @EMPID INT, @AÑOSENTRE NVARCHAR(MAX) OUTPUT, @AÑOSFIN NVARCHAR(MAX) OUTPUT AS 
DECLARE @FECHANAC DATETIME, @AÑO INT, @AÑOACTUAL INT, @CUMPLEAÑOS DATETIME
SELECT @FECHANAC = BirthDate FROM Employees WHERE EmployeeID = @EMPID

SELECT @AÑO = YEAR(@FECHANAC)
SELECT @AÑOACTUAL = YEAR(GETDATE())
WHILE @AÑO <= @AÑOACTUAL 
BEGIN
	SELECT @CUMPLEAÑOS = CAST(CAST(@AÑO AS NVARCHAR) + '-' + CAST(MONTH(@FECHANAC) AS NVARCHAR) + '-' + CAST(DAY(@FECHANAC) AS NVARCHAR) AS DATE)

	IF DATEPART(DW, @CUMPLEAÑOS) IN (1, 7)
	BEGIN
		SELECT @AÑOSFIN = ISNULL(@AÑOSFIN, '') + CAST(@AÑO AS NVARCHAR) + ', '
	END
    ELSE
	BEGIN
		SELECT @AÑOSENTRE = ISNULL(@AÑOSENTRE, '') + CAST(@AÑO AS NVARCHAR) + ', '
    END
        SELECT @AÑO = @AÑO + 1
END
GO
DECLARE @A NVARCHAR(MAX), @B NVARCHAR(MAX)
EXEC SP_10 1, @A OUTPUT, @B OUTPUT
SELECT AÑOSENTRE = @A, AÑOSFIN = @B















	





